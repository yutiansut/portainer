version: 1.0.{build}
image:
  - Visual Studio 2017
  - Ubuntu
environment:
  matrix:
    - ARCH: amd64
    - ARCH: arm
    - ARCH: arm64
    - ARCH: ppc64le
    - ARCH: s390x
  DOCKER_USER:
    secure: JapmC7j5F0mY3j/MVzU+Cw==
  DOCKER_PASS:
    secure: QGlCLNWzPD0HL8ipkohVic45/yU3bVOdjn0IiV6NnSQ=
  PORTAINER_VERSION: "1.19.2"
matrix:
  exclude:
    - image: Visual Studio 2017
      ARCH: arm
    - image: Visual Studio 2017
      ARCH: arm64
    - image: Visual Studio 2017
      ARCH: ppc64le
    - image: Visual Studio 2017
      ARCH: s390x
branches:
  only:
    - master
stack: node 9, go 1.10
artifacts:
  - path: 'portainer-$(PORTAINER_VERSION)-$(IMAGE)-$(ARCH).tar.gz'
    type: file
  - path: 'portainer-$(PORTAINER_VERSION)-$(IMAGE)-$(ARCH)-checksum.txt'
    type: file
install:
  - yarn install
  - npm install -g rebase-docker-image
init:
  - sh: export IMAGE=linux
  - cmd: SET IMAGE=windows
  - ps: >-
      if (!(Test-Path ~/.docker)) { mkdir ~/.docker }
      Set-Content -Value '{ "experimental": "enabled" }' -Path ~/.docker/config.json -Encoding Ascii
build_script:
  - sh: yarn grunt appveyorbuild:$IMAGE:$ARCH
  - cmd: yarn grunt appveyorbuild:%IMAGE%:%ARCH%
  - sh: sudo bash build/release-linux.sh $IMAGE $ARCH $PORTAINER_VERSION $DOCKER_USER $DOCKER_PASS
  - cmd: powershell -Command "& .\\build\\release-windows.ps1"
test: off
deploy:
  release: Release $(PORTAINER_VERSION)
  description: ''
  provider: GitHub
  auth_token:
    secure: BRYVGj94QlFBCMoO8yhSu+AGqKNV1+03LJEFrNUTRzo5erXfUHUIi/rgztnxfSGW
  artifact: /portainer-$(PORTAINER_VERSION)-$(IMAGE)-$(ARCH).*/
  draft: true
  prerelease: false
  on:
    branch: master
